Object -- instance of class or actual object created

class  
-is a blueprint / tepmplate to an object

Field / Variables 
--instance variable -- define properties of object
--static variable -- this is coming tomorrow

Methods
--Instance Methods --->
    we need an object to use instance
    and its mostly used for reading / manipulatig objects property

--Static Methods
    no objecet needed to use it
    and mostly used for utility method
    that has nothing to do with objects properties

Constructor
--this is a special block of code that tuns automatically
each time an object is being created

-it has same name as the current CLASS
-it does not have return type
-it can have any type of access modifier

We can have multiple version of constructor
--overloading
    -- same rule apply as method (same name different parameter list)


AC ac1 = new AC();

public AC{
    boolean on;
    
    //same name as classname and must not have return type
    THIS IS NOT A CONSTRUCTOR
    Its just a method that happens to have the same name as class name and return type is void
    public void AC(){
        sysout("boom!")
    }
}

in Main methid
AC ac1 = new AC();

If a constructor is not defined in the class
 compiler will provide one
--> default constructor -- no arg empty constructor
What if we have any constructor exists in the class
-->> we dont get defaul constructor by compiler


What's the most useful way to use constructor?
    initialize all the field values of an object while being created



if we print out any reference variable directly or any object directly it will by default call toString() method

if you have toString method defined in your own class in will print out whatever that method return
ot not we will get Hashcode

when we print out
List<WrapperList> List<String> ojects directly it will just show whats inside directly
if it
List<CustomType> object and if there is toString method defined in that CustomType Class
it will print out each item as the toString return value
instead of hashcode



